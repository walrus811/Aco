openapi: 3.0.0
info:
  version: 1.0.0
  title: Aco API
  description: 단어 시험 관리 플랫폼 Aco API
tags:
  - name: student
    description: 학생
  - name: student/report
    description: 학생 단어 시험 레포트
  - name: vocabook
    description: 단어장
  - name: school
    description: 학교
paths:
  /student:
    get:
      tags:
        - student
      description: 학생 목록 리턴
      summary: 학생 목록 리턴
      parameters:
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/LastIdParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/AscendParam"
      responses:
        "200":
          $ref: "#/components/responses/GetStudentResponse"
    post:
      tags:
        - student
      description: 새 학생 추가
      summary: 새 학생 추가
      requestBody:
        $ref: "#/components/requestBodies/PostStudentRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/PostStudentResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "409":
          $ref: "#/components/responses/DefaultErrorResponse"
  /student/{id}:
    get:
      tags:
        - student
      description: 학생 조회
      summary: 학생 조회
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          $ref: "#/components/responses/GetStudentByIdResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      tags:
        - student
      description: 학생 정보 수정
      summary: 학생 정보 수정
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        $ref: "#/components/requestBodies/PutStudentRequestBody"
      responses:
        "204":
          $ref: "#/components/responses/PutStudentResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - student
      description: 학생 삭제
      summary: 학생 삭제
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: 성공
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
  /student/query:
    post:
      tags:
        - student
      description: 학생 상세 검색
      summary: 학생 상세 검색
      requestBody:
        $ref: "#/components/requestBodies/PostStudentQueryRequestBody"
      responses:
        "200":
          $ref: "#/components/responses/GetStudentResponse"
  /student/{id}/report:
    get:
      tags:
        - student/report
      description: 학생 단어 시험 레포트 목록 리턴
      summary: 학생 단어 시험 목록 레포트 리턴
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/LastIdParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/AscendParam"
        - $ref: "#/components/parameters/FullParam"
      responses:
        "200":
          $ref: "#/components/responses/GetStudentReportResponse"
    post:
      tags:
        - student/report
      description: 학생 단어 시험 레포트 추가
      summary: 학생 단어 시험 레포트 추가
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        $ref: "#/components/requestBodies/PostStudentReportRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/PostStudentReportResponseBody"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "409":
          $ref: "#/components/responses/DefaultErrorResponse"
  /student/report/{id}:
    get:
      tags:
        - student/report
      description: 학생 단어 시험 레포트 조회
      summary: 학생 단어 시험 레포트 조회
      parameters:
        - $ref: "#/components/parameters/StudentReportIdParam"
      responses:
        "200":
          $ref: "#/components/responses/GetStudentReportByIdResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      tags:
        - student/report
      description: 학생 단어 시험 레포트 수정
      summary: 학생 단어 시험 레포트 수정
      parameters:
        - $ref: "#/components/parameters/StudentReportIdParam"
      requestBody:
        $ref: "#/components/requestBodies/PutStudentReportRequestBody"
      responses:
        "204":
          $ref: "#/components/responses/PutStudentResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - student/report
      description: 학생 단어 시험 레포트 삭제
      summary: 학생 단어 시험 레포트 삭제
      parameters:
        - $ref: "#/components/parameters/StudentReportIdParam"
      responses:
        "204":
          description: 성공
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
  /vocabook:
    get:
      tags:
        - vocabook
      description: 단어장 목록 조회
      summary: 단어장 목록 조회
      parameters:
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/LastIdParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/AscendParam"
        - $ref: "#/components/parameters/FullParam"
      responses:
        "200":
          $ref: "#/components/responses/GetVocaBookResponse"
    post:
      tags:
        - vocabook
      description: 새 단어장 추가
      summary: 새 단어장 추가
      requestBody:
        $ref: "#/components/requestBodies/PostVocaBookRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/PostVocaBookResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "409":
          $ref: "#/components/responses/DefaultErrorResponse"
  /vocabook/{id}:
    get:
      tags:
        - vocabook
      description: 단어장 조회
      summary: 단어장 조회
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          $ref: "#/components/responses/GetVocaBookByIdResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      tags:
        - vocabook
      description: 단어장 수정
      summary: 단어장 수정
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        $ref: "#/components/requestBodies/PutVocaBookRequestBody"
      responses:
        "204":
          $ref: "#/components/responses/PutVocaBookResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - vocabook
      description: 단어장 삭제
      summary: 단어장 삭제
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: 성공
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
  /vocabook/{id}/file:
    get:
      tags:
        - vocabook
      description: 단어장 다운로드(csv)
      summary: 단어장 다운로드(csv)
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          $ref: "#/components/responses/GetVocaBookFileByIdResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
  /school:
    get:
      tags:
        - school
      description: 학교 목록 리턴
      summary: 학교 목록 리턴
      parameters:
        - $ref: "#/components/parameters/LimitParam"
        - $ref: "#/components/parameters/LastIdParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/AscendParam"
      responses:
        "200":
          $ref: "#/components/responses/GetSchoolResponse"
    post:
      tags:
        - school
      description: 새 학교 추가
      summary: 새 학교 추가
      requestBody:
        $ref: "#/components/requestBodies/PostSchoolRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/PostSchoolResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "409":
          $ref: "#/components/responses/DefaultErrorResponse"
  /school/{id}:
    get:
      tags:
        - school
      description: 학교 조회
      summary: 학교 조회
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          $ref: "#/components/responses/GetSchoolByIdResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      tags:
        - school
      description: 학교 정보 수정
      summary: 학교 정보 수정
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        $ref: "#/components/requestBodies/PutSchoolRequestBody"
      responses:
        "204":
          $ref: "#/components/responses/PutSchoolResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - school
      description: 학교 삭제
      summary: 학교 삭제
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: 성공
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"
components:
  parameters:
    IdParam:
      in: path
      name: id
      required: true
      schema:
        $ref: "#/components/schemas/IdParamValue"
    LimitParam:
      in: query
      name: limit
      schema:
        $ref: "#/components/schemas/LimitParamValue"
      description: 조회할 아이템 갯수
    LastIdParam:
      in: query
      name: lastId
      schema:
        $ref: "#/components/schemas/LastIdParamValue"
      description: 조회한 마지막 Id(Keyset Pagination)
    SortByParam:
      in: query
      name: sortBy
      schema:
        $ref: "#/components/schemas/SortByParamValue"
      description: 정렬 기준 필드
    AscendParam:
      in: query
      name: ascend
      schema:
        $ref: "#/components/schemas/AscendParamValue"
      description: 정렬 순서
    FullParam:
      in: query
      name: full
      schema:
        $ref: "#/components/schemas/FullParamValue"
      description: 값 전체 조회 여부
    StudentReportIdParam:
      in: path
      name: id
      required: true
      schema:
        $ref: "#/components/schemas/StudentReportIdParamValue"
      style: matrix
      explode: true
  requestBodies:
    PostStudentRequestBody:
      description: POST - /student 리퀘스트 바디
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Student"
              - type: object
                required:
                  - name
                  - school
                  - grade
    PutStudentRequestBody:
      description: PUT - /student/{id} 리퀘스트 바디
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Student"
    PostStudentQueryRequestBody:
      description: POST - /stduent/query 리퀘스트 바디
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/QueryStudentBody"
    PostStudentReportRequestBody:
      description: POST - /student/{id}/report 리퀘스트 바디
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StudentReport"
    PutStudentReportRequestBody:
      description: PUT - /student/report/{;id*} 리퀘스트 바디
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StudentReport"
    PostVocaBookRequestBody:
      description: POST - /vocabook/{id} 리퀘스트 바디
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
              vocakBookFile:
                type: array
                items:
                  type: string
                  format: binary
          encoding:
            profileImage:
              contentType: text/csv
    PutVocaBookRequestBody:
      description: PUT - /vocabook/{id} 리퀘스트 바디
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
              vocakBookFile:
                type: array
                items:
                  type: string
                  format: binary
          encoding:
            profileImage:
              contentType: text/csv
    PostSchoolRequestBody:
      description: POST - /school 리퀘스트 바디
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/School"
              - type: object
                required:
                  - name
    PutSchoolRequestBody:
      description: PUT - /school/{id} 리퀘스트 바디
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Student"
  responses:
    DefaultErrorResponse:
      description: 기본 에러 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    GetStudentResponse:
      description: GET[POST] - /student[/query] 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/StudentWithId"
    PostStudentResponse:
      description: POST - /student 리스폰스
      headers:
        Content-Location:
          description: 추가된 리소스 위치(/student/{id})
          schema:
            type: string
    GetStudentByIdResponse:
      description: GET - /student/{id} 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/StudentWithId"
    PutStudentResponse:
      description: PUT - /student/{id} 리스폰스
      headers:
        Content-Location:
          description: 수정된 리소스 위치(/student/{id})
          schema:
            type: string
    GetStudentReportResponse:
      description: GET - /student/{id}/reportlist 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/StudentReportWithId"
    PostStudentReportResponseBody:
      description: POST - /student/{id}/report 리스폰스 바디
      headers:
        Content-Location:
          description: 추가된 리소스 위치(/student/{id})
          schema:
            type: string
    GetStudentReportByIdResponse:
      description: GET - /student/{id}/reportlist/{id} 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/StudentReportWithId"
    PutStudentReportResponse:
      description: POST - /student/report/{;id*} 리스폰스
      headers:
        Content-Location:
          description: 수정된 리소스 위치(/student/report/{;id*})
          schema:
            type: string
    GetVocaBookResponse:
      description: GET - /vocabook 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/VocaBookWithId"
    PostVocaBookResponse:
      description: POST - /vocabook 리스폰스 바디
      headers:
        Content-Location:
          description: 추가된 리소스 위치(/vocabook/{id})
          schema:
            type: string
    GetVocaBookByIdResponse:
      description: GET - /vocabook/{id} 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/VocaBookWithId"
    PutVocaBookResponse:
      description: PUT - /vocabook 리스폰스 바디
      headers:
        Content-Location:
          description: 수정된 리소스 위치(/vocabook/{id})
          schema:
            type: string
    GetVocaBookFileByIdResponse:
      description: GET - /vocabook/{id}/file 리스폰스
      headers:
        Content-Disposition:
          description: (attachment; filename="mynotepad.zip")
          schema:
            type: string
        Content-Length:
          description: 파일 크기(bytes)
          schema:
            type: string
      content:
        "application/octet-stream":
          schema:
            type: string
            format: binary
    GetSchoolResponse:
      description: GET - /school 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/SchoolWithId"
    PostSchoolResponse:
      description: POST - /school 리스폰스
      headers:
        Content-Location:
          description: 추가된 리소스 위치(/student/{id})
          schema:
            type: string
    GetSchoolByIdResponse:
      description: GET - /school/{id} 리스폰스
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/SchoolWithId"
    PutSchoolResponse:
      description: PUT - /school/{id} 리스폰스
      headers:
        Content-Location:
          description: 수정된 리소스 위치(/school/{id})
          schema:
            type: string
  schemas:
    IdParamValue:
      type: string
    StudentReportIdParamValue:
      type: object
      properties:
        studentId:
          type: string
        reportId:
          type: string
    LimitParamValue:
      type: integer
      minimum: 1
      default: 1
      description: 조회할 아이템 갯수
    LastIdParamValue:
      type: string
      description: 마지막으로 조회한 아이템의 id
    SortByParamValue:
      type: array
      items:
        type: string
      description: 정렬할 필드명 리스트(ex - name)
    AscendParamValue:
      type: integer
      enum: [1, -1]
      default: 1
      description: 정렬 순서(1 - ascending, -1 - desending)
    FullParamValue:
      type: boolean
      default: false
      description: 값 전체 조회 여부
    WithId:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    QueryParamBody:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IdParamValue"
        limit:
          $ref: "#/components/schemas/LimitParamValue"
        lastId:
          $ref: "#/components/schemas/LastIdParamValue"
        sortBy:
          $ref: "#/components/schemas/SortByParamValue"
        ascend:
          $ref: "#/components/schemas/AscendParamValue"
    Student:
      type: object
      properties:
        name:
          type: string
        school:
          type: string
        grade:
          type: integer
          minimum: 1
          maximum: 3
        retired:
          type: boolean
          default: false
    StudentWithId:
      allOf:
        - $ref: "#/components/schemas/WithId"
        - $ref: "#/components/schemas/Student"
    QueryStudentBody:
      allOf:
        - $ref: "#/components/schemas/QueryParamBody"
        - $ref: "#/components/schemas/Student"
    StudentReport:
      type: object
      properties:
        test:
          type: object
          properties:
            spell:
              type: string
            choices:
              type: string
            meaning:
              type: string
            source:
              type: string
            chapter:
              type: string
            answer:
              type: string
        testItemCount:
          type: integer
        answerCount:
          type: integer
        createdAt:
          type: string
          format: date-time
    StudentReportWithId:
      allOf:
        - $ref: "#/components/schemas/WithId"
        - $ref: "#/components/schemas/StudentReport"
    VocaBook:
      type: object
      properties:
        name:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              chapter:
                type: string
              spell:
                type: string
              meaning:
                type: string
    VocaBookWithId:
      allOf:
        - $ref: "#/components/schemas/WithId"
        - $ref: "#/components/schemas/VocaBook"
    School:
      type: object
      properties:
        name:
          type: string
    SchoolWithId:
      allOf:
        - $ref: "#/components/schemas/WithId"
        - $ref: "#/components/schemas/School"
